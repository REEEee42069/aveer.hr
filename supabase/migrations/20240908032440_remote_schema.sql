create type "public"."is_open" as enum ('open', 'closed', 'partial');

create type "public"."leave_status_enum" as enum ('pending', 'denied', 'approved', 'more', 'cancelled');

create type "public"."leave_type_enum" as enum ('paid', 'sick', 'maternity', 'paternity', 'unpaid');

create type "public"."policy_types" as enum ('time_off');

create type "public"."role_status" as enum ('open', 'close');

create type "public"."work_locations" as enum ('on-site', 'remote', 'hybrid');

drop trigger if exists "add_dashboard_stats_trigger" on "public"."organisations";

alter table "public"."contracts" drop constraint "contracts_org_fkey";

alter table "public"."dashboard_stats" drop constraint "dashboard_stats_org_fkey";

alter table "public"."legal_entities" drop constraint "legal_entities_org_fkey";

alter table "public"."org_documents" drop constraint "org_documents_org_fkey";

alter table "public"."profiles" drop constraint "profiles_org_fkey";

alter table "public"."profiles_roles" drop constraint "profiles_roles_organisation_fkey";

drop function if exists "public"."add_dashboard_stats_function"();

alter type "public"."employment_type" rename to "employment_type__old_version_to_be_dropped";

create type "public"."employment_type" as enum ('full-time', 'part-time', 'contract');

create table "public"."approval_policies" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null default ''::text,
    "description" text default ''::text,
    "type" policy_types not null,
    "levels" jsonb[] not null,
    "org" text not null,
    "updated_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text)
);


alter table "public"."approval_policies" enable row level security;

create table "public"."employee_levels" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "level" text not null,
    "role" text,
    "min_salary" numeric not null,
    "org" text not null,
    "entity" bigint,
    "min_signing_bonus" numeric,
    "fixed_allowance" jsonb[],
    "max_salary" numeric not null default '0'::numeric,
    "max_signing_bonus" numeric
);


alter table "public"."employee_levels" enable row level security;

create table "public"."job_applications" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "first_name" text not null,
    "last_name" text not null,
    "email" text not null,
    "phone_number" text,
    "resume_url" text,
    "resume" text,
    "cover_letter_url" text,
    "cover_letter" text,
    "country_location" text,
    "state_location" text not null,
    "work_authorization" boolean not null,
    "require_sponsorship" boolean not null,
    "race_ethnicity" text not null,
    "veterian_status" text,
    "gender" text,
    "disability" text,
    "links" jsonb,
    "role" bigint not null,
    "org" text not null,
    "documents" jsonb[] not null default '{}'::jsonb[],
    "stage" text not null default 'applicant'::text,
    "custom_answers" jsonb[] default '{}'::jsonb[]
);


alter table "public"."job_applications" enable row level security;

create table "public"."open_roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "job_title" text not null,
    "level" bigint,
    "employment_type" employment_type not null,
    "work_schedule" text,
    "work_shedule_interval" text,
    "responsibilities" jsonb,
    "salary" numeric,
    "signing_bonus" numeric,
    "fixed_allowance" jsonb,
    "probation_period" numeric,
    "paid_leave" integer default 20,
    "sick_leave" integer default 20,
    "entity" bigint not null,
    "org" text not null,
    "additional_offerings" jsonb[],
    "work_location" work_locations,
    "state" is_open not null,
    "years_of_experience" numeric,
    "requirements" jsonb[],
    "applicants" numeric not null default '0'::numeric,
    "custom_fields" jsonb[] default '{}'::jsonb[],
    "level_name" text
);


alter table "public"."open_roles" enable row level security;

create table "public"."org_settings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "paid_time_off" numeric default '20'::numeric,
    "sick_leave" numeric default '20'::numeric,
    "probation" numeric default '90'::numeric,
    "additional_offerings" jsonb[] default '{}'::jsonb[],
    "org" text not null,
    "work_schedule" text,
    "work_shedule_interval" text,
    "about_us" text,
    "maternity_leave" smallint default '60'::smallint,
    "paternity_leave" smallint default '20'::smallint
);


alter table "public"."org_settings" enable row level security;

create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "managers" jsonb[] not null,
    "org" text
);


alter table "public"."teams" enable row level security;

create table "public"."time_off" (
    "id" bigint generated always as identity not null,
    "profile" uuid not null,
    "contract" bigint not null,
    "leave_type" leave_type_enum not null,
    "from" timestamp with time zone not null,
    "to" timestamp with time zone not null,
    "status" leave_status_enum not null,
    "approved_at" timestamp with time zone,
    "created_at" timestamp with time zone default CURRENT_TIMESTAMP,
    "updated_at" timestamp with time zone default CURRENT_TIMESTAMP,
    "org" text not null,
    "hand_over" uuid,
    "hand_over_note" text,
    "note" text,
    "levels" jsonb[] default '{}'::jsonb[]
);


alter table "public"."time_off" enable row level security;

alter table "public"."contracts" alter column employment_type type "public"."employment_type" using employment_type::text::"public"."employment_type";

drop type "public"."employment_type__old_version_to_be_dropped";

alter table "public"."contracts" drop column "contract_type";

alter table "public"."contracts" add column "additional_offerings" jsonb[];

alter table "public"."contracts" add column "gender" text;

alter table "public"."contracts" add column "level_name" text;

alter table "public"."contracts" add column "maternity_leave" smallint default '60'::smallint;

alter table "public"."contracts" add column "maternity_leave_used" smallint default '0'::smallint;

alter table "public"."contracts" add column "paid_leave_used" smallint not null default '0'::smallint;

alter table "public"."contracts" add column "paternity_leave" smallint default '20'::smallint;

alter table "public"."contracts" add column "paternity_leave_used" smallint not null default '0'::smallint;

alter table "public"."contracts" add column "role" bigint;

alter table "public"."contracts" add column "sick_leave_used" smallint not null default '0'::smallint;

alter table "public"."contracts" add column "unpaid_leave_used" smallint default '0'::smallint;

alter table "public"."contracts" add column "work_location" work_locations;

alter table "public"."contracts" alter column "level" set data type bigint using "level"::bigint;

alter table "public"."contracts" alter column "org" set data type text using "org"::text;

alter table "public"."contracts" alter column "salary" set default '0'::numeric;

alter table "public"."contracts" alter column "salary" set not null;

alter table "public"."countries" add column "can_legal_entity" boolean not null default false;

alter table "public"."dashboard_stats" alter column "org" set data type text using "org"::text;

alter table "public"."legal_entities" drop column "ein";

alter table "public"."legal_entities" add column "rn" text;

alter table "public"."legal_entities" add column "tax_no" text;

alter table "public"."legal_entities" alter column "org" set data type text using "org"::text;

alter table "public"."org_documents" alter column "org" set data type text using "org"::text;

alter table "public"."organisations" add column "subdomain" text not null;

alter table "public"."profiles" alter column "org" set data type text using "org"::text;

alter table "public"."profiles_roles" alter column "organisation" drop not null;

alter table "public"."profiles_roles" alter column "organisation" set data type text using "organisation"::text;

CREATE UNIQUE INDEX approval_policies_pkey ON public.approval_policies USING btree (id);

CREATE UNIQUE INDEX employee_levels_pkey ON public.employee_levels USING btree (id);

CREATE UNIQUE INDEX job_applications_pkey ON public.job_applications USING btree (id);

CREATE UNIQUE INDEX org_settings_org_key ON public.org_settings USING btree (org);

CREATE UNIQUE INDEX org_settings_pkey ON public.org_settings USING btree (id);

CREATE UNIQUE INDEX organisations_subdomain_key ON public.organisations USING btree (subdomain);

CREATE UNIQUE INDEX profile_contract_pkey ON public.open_roles USING btree (id);

CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);

CREATE UNIQUE INDEX time_off_pkey ON public.time_off USING btree (id);

alter table "public"."approval_policies" add constraint "approval_policies_pkey" PRIMARY KEY using index "approval_policies_pkey";

alter table "public"."employee_levels" add constraint "employee_levels_pkey" PRIMARY KEY using index "employee_levels_pkey";

alter table "public"."job_applications" add constraint "job_applications_pkey" PRIMARY KEY using index "job_applications_pkey";

alter table "public"."open_roles" add constraint "profile_contract_pkey" PRIMARY KEY using index "profile_contract_pkey";

alter table "public"."org_settings" add constraint "org_settings_pkey" PRIMARY KEY using index "org_settings_pkey";

alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";

alter table "public"."time_off" add constraint "time_off_pkey" PRIMARY KEY using index "time_off_pkey";

alter table "public"."approval_policies" add constraint "approval_policies_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."approval_policies" validate constraint "approval_policies_org_fkey";

alter table "public"."contracts" add constraint "contracts_level_fkey" FOREIGN KEY (level) REFERENCES employee_levels(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."contracts" validate constraint "contracts_level_fkey";

alter table "public"."contracts" add constraint "contracts_role_fkey" FOREIGN KEY (role) REFERENCES open_roles(id) not valid;

alter table "public"."contracts" validate constraint "contracts_role_fkey";

alter table "public"."employee_levels" add constraint "employee_levels_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE not valid;

alter table "public"."employee_levels" validate constraint "employee_levels_entity_fkey";

alter table "public"."employee_levels" add constraint "employee_levels_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."employee_levels" validate constraint "employee_levels_org_fkey";

alter table "public"."job_applications" add constraint "job_applications_country_location_fkey" FOREIGN KEY (country_location) REFERENCES countries(country_code) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."job_applications" validate constraint "job_applications_country_location_fkey";

alter table "public"."job_applications" add constraint "job_applications_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_applications" validate constraint "job_applications_org_fkey";

alter table "public"."job_applications" add constraint "job_applications_role_fkey" FOREIGN KEY (role) REFERENCES open_roles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."job_applications" validate constraint "job_applications_role_fkey";

alter table "public"."open_roles" add constraint "profile_contract_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."open_roles" validate constraint "profile_contract_entity_fkey";

alter table "public"."open_roles" add constraint "profile_contract_level_fkey" FOREIGN KEY (level) REFERENCES employee_levels(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."open_roles" validate constraint "profile_contract_level_fkey";

alter table "public"."open_roles" add constraint "profile_contract_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."open_roles" validate constraint "profile_contract_org_fkey";

alter table "public"."org_settings" add constraint "org_settings_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."org_settings" validate constraint "org_settings_org_fkey";

alter table "public"."org_settings" add constraint "org_settings_org_key" UNIQUE using index "org_settings_org_key";

alter table "public"."organisations" add constraint "organisations_subdomain_key" UNIQUE using index "organisations_subdomain_key";

alter table "public"."teams" add constraint "teams_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."teams" validate constraint "teams_org_fkey";

alter table "public"."time_off" add constraint "time_off_contract_fkey" FOREIGN KEY (contract) REFERENCES contracts(id) ON DELETE CASCADE not valid;

alter table "public"."time_off" validate constraint "time_off_contract_fkey";

alter table "public"."time_off" add constraint "time_off_hand_over_fkey" FOREIGN KEY (hand_over) REFERENCES profiles(id) ON UPDATE CASCADE not valid;

alter table "public"."time_off" validate constraint "time_off_hand_over_fkey";

alter table "public"."time_off" add constraint "time_off_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."time_off" validate constraint "time_off_org_fkey";

alter table "public"."time_off" add constraint "time_off_profile_fkey" FOREIGN KEY (profile) REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."time_off" validate constraint "time_off_profile_fkey";

alter table "public"."contracts" add constraint "contracts_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."contracts" validate constraint "contracts_org_fkey";

alter table "public"."dashboard_stats" add constraint "dashboard_stats_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dashboard_stats" validate constraint "dashboard_stats_org_fkey";

alter table "public"."legal_entities" add constraint "legal_entities_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."legal_entities" validate constraint "legal_entities_org_fkey";

alter table "public"."org_documents" add constraint "org_documents_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."org_documents" validate constraint "org_documents_org_fkey";

alter table "public"."profiles" add constraint "profiles_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profiles" validate constraint "profiles_org_fkey";

alter table "public"."profiles_roles" add constraint "profiles_roles_organisation_fkey" FOREIGN KEY (organisation) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profiles_roles" validate constraint "profiles_roles_organisation_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.update_applicants_on_delete()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    UPDATE open_roles
    SET applicants = applicants - 1
    WHERE id = OLD.role;
    RETURN OLD;
END;
$function$
;

CREATE OR REPLACE FUNCTION public.update_applicants_on_insert()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    UPDATE open_roles
    SET applicants = applicants + 1
    WHERE id = NEW.role;
    RETURN NEW;
END;
$function$
;

grant delete on table "public"."approval_policies" to "anon";

grant insert on table "public"."approval_policies" to "anon";

grant references on table "public"."approval_policies" to "anon";

grant select on table "public"."approval_policies" to "anon";

grant trigger on table "public"."approval_policies" to "anon";

grant truncate on table "public"."approval_policies" to "anon";

grant update on table "public"."approval_policies" to "anon";

grant delete on table "public"."approval_policies" to "authenticated";

grant insert on table "public"."approval_policies" to "authenticated";

grant references on table "public"."approval_policies" to "authenticated";

grant select on table "public"."approval_policies" to "authenticated";

grant trigger on table "public"."approval_policies" to "authenticated";

grant truncate on table "public"."approval_policies" to "authenticated";

grant update on table "public"."approval_policies" to "authenticated";

grant delete on table "public"."approval_policies" to "service_role";

grant insert on table "public"."approval_policies" to "service_role";

grant references on table "public"."approval_policies" to "service_role";

grant select on table "public"."approval_policies" to "service_role";

grant trigger on table "public"."approval_policies" to "service_role";

grant truncate on table "public"."approval_policies" to "service_role";

grant update on table "public"."approval_policies" to "service_role";

grant delete on table "public"."employee_levels" to "anon";

grant insert on table "public"."employee_levels" to "anon";

grant references on table "public"."employee_levels" to "anon";

grant select on table "public"."employee_levels" to "anon";

grant trigger on table "public"."employee_levels" to "anon";

grant truncate on table "public"."employee_levels" to "anon";

grant update on table "public"."employee_levels" to "anon";

grant delete on table "public"."employee_levels" to "authenticated";

grant insert on table "public"."employee_levels" to "authenticated";

grant references on table "public"."employee_levels" to "authenticated";

grant select on table "public"."employee_levels" to "authenticated";

grant trigger on table "public"."employee_levels" to "authenticated";

grant truncate on table "public"."employee_levels" to "authenticated";

grant update on table "public"."employee_levels" to "authenticated";

grant delete on table "public"."employee_levels" to "service_role";

grant insert on table "public"."employee_levels" to "service_role";

grant references on table "public"."employee_levels" to "service_role";

grant select on table "public"."employee_levels" to "service_role";

grant trigger on table "public"."employee_levels" to "service_role";

grant truncate on table "public"."employee_levels" to "service_role";

grant update on table "public"."employee_levels" to "service_role";

grant delete on table "public"."job_applications" to "anon";

grant insert on table "public"."job_applications" to "anon";

grant references on table "public"."job_applications" to "anon";

grant select on table "public"."job_applications" to "anon";

grant trigger on table "public"."job_applications" to "anon";

grant truncate on table "public"."job_applications" to "anon";

grant update on table "public"."job_applications" to "anon";

grant delete on table "public"."job_applications" to "authenticated";

grant insert on table "public"."job_applications" to "authenticated";

grant references on table "public"."job_applications" to "authenticated";

grant select on table "public"."job_applications" to "authenticated";

grant trigger on table "public"."job_applications" to "authenticated";

grant truncate on table "public"."job_applications" to "authenticated";

grant update on table "public"."job_applications" to "authenticated";

grant delete on table "public"."job_applications" to "service_role";

grant insert on table "public"."job_applications" to "service_role";

grant references on table "public"."job_applications" to "service_role";

grant select on table "public"."job_applications" to "service_role";

grant trigger on table "public"."job_applications" to "service_role";

grant truncate on table "public"."job_applications" to "service_role";

grant update on table "public"."job_applications" to "service_role";

grant delete on table "public"."open_roles" to "anon";

grant insert on table "public"."open_roles" to "anon";

grant references on table "public"."open_roles" to "anon";

grant select on table "public"."open_roles" to "anon";

grant trigger on table "public"."open_roles" to "anon";

grant truncate on table "public"."open_roles" to "anon";

grant update on table "public"."open_roles" to "anon";

grant delete on table "public"."open_roles" to "authenticated";

grant insert on table "public"."open_roles" to "authenticated";

grant references on table "public"."open_roles" to "authenticated";

grant select on table "public"."open_roles" to "authenticated";

grant trigger on table "public"."open_roles" to "authenticated";

grant truncate on table "public"."open_roles" to "authenticated";

grant update on table "public"."open_roles" to "authenticated";

grant delete on table "public"."open_roles" to "service_role";

grant insert on table "public"."open_roles" to "service_role";

grant references on table "public"."open_roles" to "service_role";

grant select on table "public"."open_roles" to "service_role";

grant trigger on table "public"."open_roles" to "service_role";

grant truncate on table "public"."open_roles" to "service_role";

grant update on table "public"."open_roles" to "service_role";

grant delete on table "public"."org_settings" to "anon";

grant insert on table "public"."org_settings" to "anon";

grant references on table "public"."org_settings" to "anon";

grant select on table "public"."org_settings" to "anon";

grant trigger on table "public"."org_settings" to "anon";

grant truncate on table "public"."org_settings" to "anon";

grant update on table "public"."org_settings" to "anon";

grant delete on table "public"."org_settings" to "authenticated";

grant insert on table "public"."org_settings" to "authenticated";

grant references on table "public"."org_settings" to "authenticated";

grant select on table "public"."org_settings" to "authenticated";

grant trigger on table "public"."org_settings" to "authenticated";

grant truncate on table "public"."org_settings" to "authenticated";

grant update on table "public"."org_settings" to "authenticated";

grant delete on table "public"."org_settings" to "service_role";

grant insert on table "public"."org_settings" to "service_role";

grant references on table "public"."org_settings" to "service_role";

grant select on table "public"."org_settings" to "service_role";

grant trigger on table "public"."org_settings" to "service_role";

grant truncate on table "public"."org_settings" to "service_role";

grant update on table "public"."org_settings" to "service_role";

grant delete on table "public"."teams" to "anon";

grant insert on table "public"."teams" to "anon";

grant references on table "public"."teams" to "anon";

grant select on table "public"."teams" to "anon";

grant trigger on table "public"."teams" to "anon";

grant truncate on table "public"."teams" to "anon";

grant update on table "public"."teams" to "anon";

grant delete on table "public"."teams" to "authenticated";

grant insert on table "public"."teams" to "authenticated";

grant references on table "public"."teams" to "authenticated";

grant select on table "public"."teams" to "authenticated";

grant trigger on table "public"."teams" to "authenticated";

grant truncate on table "public"."teams" to "authenticated";

grant update on table "public"."teams" to "authenticated";

grant delete on table "public"."teams" to "service_role";

grant insert on table "public"."teams" to "service_role";

grant references on table "public"."teams" to "service_role";

grant select on table "public"."teams" to "service_role";

grant trigger on table "public"."teams" to "service_role";

grant truncate on table "public"."teams" to "service_role";

grant update on table "public"."teams" to "service_role";

grant delete on table "public"."time_off" to "anon";

grant insert on table "public"."time_off" to "anon";

grant references on table "public"."time_off" to "anon";

grant select on table "public"."time_off" to "anon";

grant trigger on table "public"."time_off" to "anon";

grant truncate on table "public"."time_off" to "anon";

grant update on table "public"."time_off" to "anon";

grant delete on table "public"."time_off" to "authenticated";

grant insert on table "public"."time_off" to "authenticated";

grant references on table "public"."time_off" to "authenticated";

grant select on table "public"."time_off" to "authenticated";

grant trigger on table "public"."time_off" to "authenticated";

grant truncate on table "public"."time_off" to "authenticated";

grant update on table "public"."time_off" to "authenticated";

grant delete on table "public"."time_off" to "service_role";

grant insert on table "public"."time_off" to "service_role";

grant references on table "public"."time_off" to "service_role";

grant select on table "public"."time_off" to "service_role";

grant trigger on table "public"."time_off" to "service_role";

grant truncate on table "public"."time_off" to "service_role";

grant update on table "public"."time_off" to "service_role";

create policy "Enable read access for auth users"
on "public"."approval_policies"
as permissive
for select
to authenticated
using (true);


create policy "Enable update for auth users"
on "public"."approval_policies"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Enable all for authenticated users only"
on "public"."employee_levels"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable insert for all users"
on "public"."job_applications"
as permissive
for insert
to public
with check (true);


create policy "Enable read access for all users"
on "public"."job_applications"
as permissive
for select
to public
using (true);


create policy "Enable update for authenticated users only"
on "public"."job_applications"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Enable read access for all users"
on "public"."legal_entities"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."open_roles"
as permissive
for select
to public
using (true);


create policy "open_roles_policy"
on "public"."open_roles"
as permissive
for all
to public
using ((EXISTS ( SELECT 1
   FROM profiles_roles
  WHERE ((profiles_roles.profile = auth.uid()) AND (profiles_roles.organisation = open_roles.org)))));


create policy "Enable all for authenticated users only"
on "public"."org_settings"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."time_off"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for auth users"
on "public"."time_off"
as permissive
for select
to authenticated
using (true);


create policy "Enable update for auth users"
on "public"."time_off"
as permissive
for update
to authenticated
using (true)
with check (true);


CREATE TRIGGER job_applications_delete_trigger AFTER DELETE ON public.job_applications FOR EACH ROW EXECUTE FUNCTION update_applicants_on_delete();

CREATE TRIGGER job_applications_insert_trigger AFTER INSERT ON public.job_applications FOR EACH ROW EXECUTE FUNCTION update_applicants_on_insert();


