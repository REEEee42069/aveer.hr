create table "public"."okr_objectives" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "okr" bigint not null,
    "org" text not null,
    "entity" bigint,
    "objective" text not null
);


alter table "public"."okr_objectives" enable row level security;

create table "public"."okr_results" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "okr" bigint not null,
    "okr_objective" bigint not null,
    "org" text not null,
    "entity" bigint,
    "result" text not null
);


alter table "public"."okr_results" enable row level security;

create table "public"."okrs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text not null,
    "org" text not null,
    "entity" bigint,
    "start" timestamp with time zone not null,
    "end" timestamp with time zone not null
);


alter table "public"."okrs" enable row level security;

CREATE UNIQUE INDEX objectives_pkey ON public.okr_objectives USING btree (id);

CREATE UNIQUE INDEX okr_results_pkey ON public.okr_results USING btree (id);

CREATE UNIQUE INDEX okrs_pkey ON public.okrs USING btree (id);

alter table "public"."okr_objectives" add constraint "objectives_pkey" PRIMARY KEY using index "objectives_pkey";

alter table "public"."okr_results" add constraint "okr_results_pkey" PRIMARY KEY using index "okr_results_pkey";

alter table "public"."okrs" add constraint "okrs_pkey" PRIMARY KEY using index "okrs_pkey";

alter table "public"."okr_objectives" add constraint "objectives_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_objectives" validate constraint "objectives_entity_fkey";

alter table "public"."okr_objectives" add constraint "objectives_okr_fkey" FOREIGN KEY (okr) REFERENCES okrs(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_objectives" validate constraint "objectives_okr_fkey";

alter table "public"."okr_objectives" add constraint "objectives_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_objectives" validate constraint "objectives_org_fkey";

alter table "public"."okr_results" add constraint "okr_results_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_results" validate constraint "okr_results_entity_fkey";

alter table "public"."okr_results" add constraint "okr_results_okr_fkey" FOREIGN KEY (okr) REFERENCES okrs(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_results" validate constraint "okr_results_okr_fkey";

alter table "public"."okr_results" add constraint "okr_results_okr_objective_fkey" FOREIGN KEY (okr_objective) REFERENCES okr_objectives(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_results" validate constraint "okr_results_okr_objective_fkey";

alter table "public"."okr_results" add constraint "okr_results_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okr_results" validate constraint "okr_results_org_fkey";

alter table "public"."okrs" add constraint "okrs_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okrs" validate constraint "okrs_entity_fkey";

alter table "public"."okrs" add constraint "okrs_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."okrs" validate constraint "okrs_org_fkey";

grant delete on table "public"."okr_objectives" to "anon";

grant insert on table "public"."okr_objectives" to "anon";

grant references on table "public"."okr_objectives" to "anon";

grant select on table "public"."okr_objectives" to "anon";

grant trigger on table "public"."okr_objectives" to "anon";

grant truncate on table "public"."okr_objectives" to "anon";

grant update on table "public"."okr_objectives" to "anon";

grant delete on table "public"."okr_objectives" to "authenticated";

grant insert on table "public"."okr_objectives" to "authenticated";

grant references on table "public"."okr_objectives" to "authenticated";

grant select on table "public"."okr_objectives" to "authenticated";

grant trigger on table "public"."okr_objectives" to "authenticated";

grant truncate on table "public"."okr_objectives" to "authenticated";

grant update on table "public"."okr_objectives" to "authenticated";

grant delete on table "public"."okr_objectives" to "service_role";

grant insert on table "public"."okr_objectives" to "service_role";

grant references on table "public"."okr_objectives" to "service_role";

grant select on table "public"."okr_objectives" to "service_role";

grant trigger on table "public"."okr_objectives" to "service_role";

grant truncate on table "public"."okr_objectives" to "service_role";

grant update on table "public"."okr_objectives" to "service_role";

grant delete on table "public"."okr_results" to "anon";

grant insert on table "public"."okr_results" to "anon";

grant references on table "public"."okr_results" to "anon";

grant select on table "public"."okr_results" to "anon";

grant trigger on table "public"."okr_results" to "anon";

grant truncate on table "public"."okr_results" to "anon";

grant update on table "public"."okr_results" to "anon";

grant delete on table "public"."okr_results" to "authenticated";

grant insert on table "public"."okr_results" to "authenticated";

grant references on table "public"."okr_results" to "authenticated";

grant select on table "public"."okr_results" to "authenticated";

grant trigger on table "public"."okr_results" to "authenticated";

grant truncate on table "public"."okr_results" to "authenticated";

grant update on table "public"."okr_results" to "authenticated";

grant delete on table "public"."okr_results" to "service_role";

grant insert on table "public"."okr_results" to "service_role";

grant references on table "public"."okr_results" to "service_role";

grant select on table "public"."okr_results" to "service_role";

grant trigger on table "public"."okr_results" to "service_role";

grant truncate on table "public"."okr_results" to "service_role";

grant update on table "public"."okr_results" to "service_role";

grant delete on table "public"."okrs" to "anon";

grant insert on table "public"."okrs" to "anon";

grant references on table "public"."okrs" to "anon";

grant select on table "public"."okrs" to "anon";

grant trigger on table "public"."okrs" to "anon";

grant truncate on table "public"."okrs" to "anon";

grant update on table "public"."okrs" to "anon";

grant delete on table "public"."okrs" to "authenticated";

grant insert on table "public"."okrs" to "authenticated";

grant references on table "public"."okrs" to "authenticated";

grant select on table "public"."okrs" to "authenticated";

grant trigger on table "public"."okrs" to "authenticated";

grant truncate on table "public"."okrs" to "authenticated";

grant update on table "public"."okrs" to "authenticated";

grant delete on table "public"."okrs" to "service_role";

grant insert on table "public"."okrs" to "service_role";

grant references on table "public"."okrs" to "service_role";

grant select on table "public"."okrs" to "service_role";

grant trigger on table "public"."okrs" to "service_role";

grant truncate on table "public"."okrs" to "service_role";

grant update on table "public"."okrs" to "service_role";

create policy "Enable all for authenticated users only"
on "public"."okr_objectives"
as permissive
for all
to authenticated
using (true);


create policy "Enable all for authenticated users only"
on "public"."okr_results"
as permissive
for all
to authenticated
using (true);


create policy "Enable all for authenticated users only"
on "public"."okrs"
as permissive
for all
to authenticated
using (true);



