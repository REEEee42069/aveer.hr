create type "public"."boarding_state" as enum ('initial', 'pending', 'approved');

create table "public"."contract_check_list" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "contract" bigint not null,
    "boarding" bigint not null,
    "checklist" jsonb[] not null default '{}'::jsonb[],
    "org" text not null,
    "state" boarding_state not null default 'initial'::boarding_state,
    "levels" jsonb[] not null default '{}'::jsonb[]
);


alter table "public"."contract_check_list" enable row level security;

alter table "public"."contracts" add column "offboarding" bigint;

alter table "public"."contracts" add column "onboarding" bigint;

CREATE UNIQUE INDEX contract_check_list_pkey ON public.contract_check_list USING btree (id);

alter table "public"."contract_check_list" add constraint "contract_check_list_pkey" PRIMARY KEY using index "contract_check_list_pkey";

alter table "public"."contract_check_list" add constraint "contract_check_list_boarding_fkey" FOREIGN KEY (boarding) REFERENCES boaring_check_list(id) ON UPDATE CASCADE not valid;

alter table "public"."contract_check_list" validate constraint "contract_check_list_boarding_fkey";

alter table "public"."contract_check_list" add constraint "contract_check_list_contract_fkey" FOREIGN KEY (contract) REFERENCES contracts(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."contract_check_list" validate constraint "contract_check_list_contract_fkey";

alter table "public"."contract_check_list" add constraint "contract_check_list_org_fkey" FOREIGN KEY (org) REFERENCES organisations(subdomain) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."contract_check_list" validate constraint "contract_check_list_org_fkey";

alter table "public"."contracts" add constraint "contracts_offboarding_fkey" FOREIGN KEY (offboarding) REFERENCES boaring_check_list(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."contracts" validate constraint "contracts_offboarding_fkey";

alter table "public"."contracts" add constraint "contracts_onboarding_fkey" FOREIGN KEY (onboarding) REFERENCES boaring_check_list(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."contracts" validate constraint "contracts_onboarding_fkey";

grant delete on table "public"."contract_check_list" to "anon";

grant insert on table "public"."contract_check_list" to "anon";

grant references on table "public"."contract_check_list" to "anon";

grant select on table "public"."contract_check_list" to "anon";

grant trigger on table "public"."contract_check_list" to "anon";

grant truncate on table "public"."contract_check_list" to "anon";

grant update on table "public"."contract_check_list" to "anon";

grant delete on table "public"."contract_check_list" to "authenticated";

grant insert on table "public"."contract_check_list" to "authenticated";

grant references on table "public"."contract_check_list" to "authenticated";

grant select on table "public"."contract_check_list" to "authenticated";

grant trigger on table "public"."contract_check_list" to "authenticated";

grant truncate on table "public"."contract_check_list" to "authenticated";

grant update on table "public"."contract_check_list" to "authenticated";

grant delete on table "public"."contract_check_list" to "service_role";

grant insert on table "public"."contract_check_list" to "service_role";

grant references on table "public"."contract_check_list" to "service_role";

grant select on table "public"."contract_check_list" to "service_role";

grant trigger on table "public"."contract_check_list" to "service_role";

grant truncate on table "public"."contract_check_list" to "service_role";

grant update on table "public"."contract_check_list" to "service_role";

create policy "Enable all for authenticated users only"
on "public"."contract_check_list"
as permissive
for all
to authenticated
using (true);



