create type "public"."contract_state" as enum ('awaiting signatures', 'awaiting org signature', 'awaiting signature', 'signed', 'inactive', 'terminated', 'scheduled termination');

create type "public"."contract_type" as enum ('employee', 'contractor');

create type "public"."employment_type" as enum ('full-time', 'part-time');

create sequence "public"."states_id_seq";

create table "public"."contracts" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "job_title" text not null,
    "level" text,
    "employment_type" employment_type not null,
    "work_schedule" text,
    "work_shedule_interval" text,
    "responsibilities" jsonb,
    "salary" numeric,
    "signing_bonus" numeric,
    "fixed_allowance" jsonb,
    "start_date" date,
    "end_date" date,
    "probation_period" numeric,
    "paid_leave" integer default 20,
    "sick_leave" integer default 20,
    "profile" uuid,
    "entity" bigint not null,
    "org" bigint not null,
    "org_signed" timestamp with time zone,
    "profile_signed" timestamp with time zone,
    "status" contract_state not null default 'awaiting signatures'::contract_state,
    "signed_by" uuid,
    "profile_signature_string" text,
    "org_signature_string" text,
    "terminated_by" uuid,
    "contract_type" contract_type not null default 'employee'::contract_type
);


alter table "public"."contracts" enable row level security;

create table "public"."countries" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "dial_code" text not null,
    "country_code" text not null
);


alter table "public"."countries" enable row level security;

create table "public"."dashboard_stats" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "signed_contracts" numeric default '0'::numeric,
    "contracts" numeric not null default '0'::numeric,
    "org" bigint not null
);


alter table "public"."dashboard_stats" enable row level security;

create table "public"."legal_entities" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "name" text not null,
    "formation_date" timestamp with time zone,
    "incorporation_country" text not null,
    "company_type" text,
    "ein" text,
    "sic" text,
    "address_state" integer generated by default as identity not null,
    "address_code" text,
    "street_address" text,
    "org" bigint not null,
    "is_eor" boolean not null default false
);


alter table "public"."legal_entities" enable row level security;

create table "public"."org_documents" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "link" text,
    "signed_by" uuid,
    "type" text not null,
    "profile" uuid,
    "entity" bigint,
    "eor_entity" bigint,
    "org" bigint,
    "signature_text" text
);


alter table "public"."org_documents" enable row level security;

create table "public"."organisations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "name" text not null default ''::text,
    "website" text
);


alter table "public"."organisations" enable row level security;

create table "public"."profiles" (
    "id" uuid not null,
    "first_name" text not null,
    "last_name" text not null,
    "org" bigint,
    "nationality" text,
    "email" text not null
);


alter table "public"."profiles" enable row level security;

create table "public"."profiles_roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "role" text not null,
    "profile" uuid not null default auth.uid(),
    "organisation" bigint not null
);


alter table "public"."profiles_roles" enable row level security;

create table "public"."roles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null default ''::text,
    "description" text
);


alter table "public"."roles" enable row level security;

create table "public"."states" (
    "id" integer not null default nextval('states_id_seq'::regclass),
    "name" character varying(100) not null,
    "short_code" character varying(10) not null,
    "country_code" character varying(2) not null
);


alter table "public"."states" enable row level security;

alter sequence "public"."states_id_seq" owned by "public"."states"."id";

CREATE UNIQUE INDEX contracts_pkey ON public.contracts USING btree (id);

CREATE UNIQUE INDEX countries_country_code_key ON public.countries USING btree (country_code);

CREATE UNIQUE INDEX countries_pkey ON public.countries USING btree (id);

CREATE UNIQUE INDEX dashboard_stats_pkey ON public.dashboard_stats USING btree (id);

CREATE UNIQUE INDEX "legal entities_pkey" ON public.legal_entities USING btree (id);

CREATE UNIQUE INDEX org_documents_pkey ON public.org_documents USING btree (id);

CREATE UNIQUE INDEX organisations_pkey ON public.organisations USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX roles_name_key ON public.roles USING btree (name);

CREATE UNIQUE INDEX roles_pkey ON public.roles USING btree (id);

CREATE UNIQUE INDEX states_pkey ON public.states USING btree (id);

CREATE UNIQUE INDEX user_roles_pkey ON public.profiles_roles USING btree (id);

alter table "public"."contracts" add constraint "contracts_pkey" PRIMARY KEY using index "contracts_pkey";

alter table "public"."countries" add constraint "countries_pkey" PRIMARY KEY using index "countries_pkey";

alter table "public"."dashboard_stats" add constraint "dashboard_stats_pkey" PRIMARY KEY using index "dashboard_stats_pkey";

alter table "public"."legal_entities" add constraint "legal entities_pkey" PRIMARY KEY using index "legal entities_pkey";

alter table "public"."org_documents" add constraint "org_documents_pkey" PRIMARY KEY using index "org_documents_pkey";

alter table "public"."organisations" add constraint "organisations_pkey" PRIMARY KEY using index "organisations_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."profiles_roles" add constraint "user_roles_pkey" PRIMARY KEY using index "user_roles_pkey";

alter table "public"."roles" add constraint "roles_pkey" PRIMARY KEY using index "roles_pkey";

alter table "public"."states" add constraint "states_pkey" PRIMARY KEY using index "states_pkey";

alter table "public"."contracts" add constraint "contracts_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."contracts" validate constraint "contracts_entity_fkey";

alter table "public"."contracts" add constraint "contracts_org_fkey" FOREIGN KEY (org) REFERENCES organisations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."contracts" validate constraint "contracts_org_fkey";

alter table "public"."contracts" add constraint "contracts_profile_fkey" FOREIGN KEY (profile) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."contracts" validate constraint "contracts_profile_fkey";

alter table "public"."contracts" add constraint "contracts_signed_by_fkey" FOREIGN KEY (signed_by) REFERENCES profiles(id) ON UPDATE CASCADE not valid;

alter table "public"."contracts" validate constraint "contracts_signed_by_fkey";

alter table "public"."contracts" add constraint "contracts_terminated_by_fkey" FOREIGN KEY (terminated_by) REFERENCES profiles(id) ON UPDATE CASCADE not valid;

alter table "public"."contracts" validate constraint "contracts_terminated_by_fkey";

alter table "public"."countries" add constraint "countries_country_code_key" UNIQUE using index "countries_country_code_key";

alter table "public"."dashboard_stats" add constraint "dashboard_stats_org_fkey" FOREIGN KEY (org) REFERENCES organisations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dashboard_stats" validate constraint "dashboard_stats_org_fkey";

alter table "public"."legal_entities" add constraint "legal_entities_address_state_fkey" FOREIGN KEY (address_state) REFERENCES states(id) ON UPDATE CASCADE not valid;

alter table "public"."legal_entities" validate constraint "legal_entities_address_state_fkey";

alter table "public"."legal_entities" add constraint "legal_entities_incorporation_country_fkey" FOREIGN KEY (incorporation_country) REFERENCES countries(country_code) ON UPDATE CASCADE not valid;

alter table "public"."legal_entities" validate constraint "legal_entities_incorporation_country_fkey";

alter table "public"."legal_entities" add constraint "legal_entities_org_fkey" FOREIGN KEY (org) REFERENCES organisations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."legal_entities" validate constraint "legal_entities_org_fkey";

alter table "public"."org_documents" add constraint "org_documents_entity_fkey" FOREIGN KEY (entity) REFERENCES legal_entities(id) ON UPDATE CASCADE not valid;

alter table "public"."org_documents" validate constraint "org_documents_entity_fkey";

alter table "public"."org_documents" add constraint "org_documents_eor_entity_fkey" FOREIGN KEY (eor_entity) REFERENCES legal_entities(id) ON UPDATE CASCADE not valid;

alter table "public"."org_documents" validate constraint "org_documents_eor_entity_fkey";

alter table "public"."org_documents" add constraint "org_documents_org_fkey" FOREIGN KEY (org) REFERENCES organisations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."org_documents" validate constraint "org_documents_org_fkey";

alter table "public"."org_documents" add constraint "org_documents_profile_fkey" FOREIGN KEY (profile) REFERENCES profiles(id) ON UPDATE CASCADE not valid;

alter table "public"."org_documents" validate constraint "org_documents_profile_fkey";

alter table "public"."org_documents" add constraint "org_documents_signed_by_fkey" FOREIGN KEY (signed_by) REFERENCES profiles(id) ON UPDATE CASCADE not valid;

alter table "public"."org_documents" validate constraint "org_documents_signed_by_fkey";

alter table "public"."profiles" add constraint "profiles_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."profiles" validate constraint "profiles_id_fkey";

alter table "public"."profiles" add constraint "profiles_nationality_fkey" FOREIGN KEY (nationality) REFERENCES countries(country_code) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."profiles" validate constraint "profiles_nationality_fkey";

alter table "public"."profiles" add constraint "profiles_org_fkey" FOREIGN KEY (org) REFERENCES organisations(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."profiles" validate constraint "profiles_org_fkey";

alter table "public"."profiles_roles" add constraint "profiles_roles_organisation_fkey" FOREIGN KEY (organisation) REFERENCES organisations(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profiles_roles" validate constraint "profiles_roles_organisation_fkey";

alter table "public"."profiles_roles" add constraint "profiles_roles_profile_fkey" FOREIGN KEY (profile) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profiles_roles" validate constraint "profiles_roles_profile_fkey";

alter table "public"."profiles_roles" add constraint "profiles_roles_role_fkey" FOREIGN KEY (role) REFERENCES roles(name) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profiles_roles" validate constraint "profiles_roles_role_fkey";

alter table "public"."roles" add constraint "roles_name_key" UNIQUE using index "roles_name_key";

alter table "public"."states" add constraint "states_country_code_fkey" FOREIGN KEY (country_code) REFERENCES countries(country_code) not valid;

alter table "public"."states" validate constraint "states_country_code_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.add_dashboard_stats_function()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
INSERT INTO dashboard_stats (org, created_at)
VALUES (NEW.id, CURRENT_TIMESTAMP);
RETURN NEW;
END;
$function$
;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
 SET search_path TO ''
AS $function$
begin
  insert into public.profiles (id, email, first_name, last_name)
  values (new.id, new.email, new.raw_user_meta_data ->> 'first_name', new.raw_user_meta_data ->> 'last_name');
  return new;
end;
$function$
;

CREATE OR REPLACE FUNCTION public.update_contract_status()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
    IF NEW.org_signed IS DISTINCT FROM OLD.org_signed OR NEW.profile_signed IS DISTINCT FROM OLD.profile_signed THEN
        IF NEW.org_signed IS NOT NULL AND NEW.profile_signed IS NULL THEN
            NEW.status = 'awaiting signature';
        ELSIF NEW.org_signed IS NOT NULL AND NEW.profile_signed IS NOT NULL THEN
            NEW.status = 'signed';
        ELSIF NEW.profile_signed IS NOT NULL AND NEW.org_signed IS NULL THEN
            NEW.status = 'awaiting org signature';
        END IF;
    END IF;
    
    RETURN NEW;
END;
$function$
;

grant delete on table "public"."contracts" to "anon";

grant insert on table "public"."contracts" to "anon";

grant references on table "public"."contracts" to "anon";

grant select on table "public"."contracts" to "anon";

grant trigger on table "public"."contracts" to "anon";

grant truncate on table "public"."contracts" to "anon";

grant update on table "public"."contracts" to "anon";

grant delete on table "public"."contracts" to "authenticated";

grant insert on table "public"."contracts" to "authenticated";

grant references on table "public"."contracts" to "authenticated";

grant select on table "public"."contracts" to "authenticated";

grant trigger on table "public"."contracts" to "authenticated";

grant truncate on table "public"."contracts" to "authenticated";

grant update on table "public"."contracts" to "authenticated";

grant delete on table "public"."contracts" to "service_role";

grant insert on table "public"."contracts" to "service_role";

grant references on table "public"."contracts" to "service_role";

grant select on table "public"."contracts" to "service_role";

grant trigger on table "public"."contracts" to "service_role";

grant truncate on table "public"."contracts" to "service_role";

grant update on table "public"."contracts" to "service_role";

grant delete on table "public"."countries" to "anon";

grant insert on table "public"."countries" to "anon";

grant references on table "public"."countries" to "anon";

grant select on table "public"."countries" to "anon";

grant trigger on table "public"."countries" to "anon";

grant truncate on table "public"."countries" to "anon";

grant update on table "public"."countries" to "anon";

grant delete on table "public"."countries" to "authenticated";

grant insert on table "public"."countries" to "authenticated";

grant references on table "public"."countries" to "authenticated";

grant select on table "public"."countries" to "authenticated";

grant trigger on table "public"."countries" to "authenticated";

grant truncate on table "public"."countries" to "authenticated";

grant update on table "public"."countries" to "authenticated";

grant delete on table "public"."countries" to "service_role";

grant insert on table "public"."countries" to "service_role";

grant references on table "public"."countries" to "service_role";

grant select on table "public"."countries" to "service_role";

grant trigger on table "public"."countries" to "service_role";

grant truncate on table "public"."countries" to "service_role";

grant update on table "public"."countries" to "service_role";

grant delete on table "public"."dashboard_stats" to "anon";

grant insert on table "public"."dashboard_stats" to "anon";

grant references on table "public"."dashboard_stats" to "anon";

grant select on table "public"."dashboard_stats" to "anon";

grant trigger on table "public"."dashboard_stats" to "anon";

grant truncate on table "public"."dashboard_stats" to "anon";

grant update on table "public"."dashboard_stats" to "anon";

grant delete on table "public"."dashboard_stats" to "authenticated";

grant insert on table "public"."dashboard_stats" to "authenticated";

grant references on table "public"."dashboard_stats" to "authenticated";

grant select on table "public"."dashboard_stats" to "authenticated";

grant trigger on table "public"."dashboard_stats" to "authenticated";

grant truncate on table "public"."dashboard_stats" to "authenticated";

grant update on table "public"."dashboard_stats" to "authenticated";

grant delete on table "public"."dashboard_stats" to "service_role";

grant insert on table "public"."dashboard_stats" to "service_role";

grant references on table "public"."dashboard_stats" to "service_role";

grant select on table "public"."dashboard_stats" to "service_role";

grant trigger on table "public"."dashboard_stats" to "service_role";

grant truncate on table "public"."dashboard_stats" to "service_role";

grant update on table "public"."dashboard_stats" to "service_role";

grant delete on table "public"."legal_entities" to "anon";

grant insert on table "public"."legal_entities" to "anon";

grant references on table "public"."legal_entities" to "anon";

grant select on table "public"."legal_entities" to "anon";

grant trigger on table "public"."legal_entities" to "anon";

grant truncate on table "public"."legal_entities" to "anon";

grant update on table "public"."legal_entities" to "anon";

grant delete on table "public"."legal_entities" to "authenticated";

grant insert on table "public"."legal_entities" to "authenticated";

grant references on table "public"."legal_entities" to "authenticated";

grant select on table "public"."legal_entities" to "authenticated";

grant trigger on table "public"."legal_entities" to "authenticated";

grant truncate on table "public"."legal_entities" to "authenticated";

grant update on table "public"."legal_entities" to "authenticated";

grant delete on table "public"."legal_entities" to "service_role";

grant insert on table "public"."legal_entities" to "service_role";

grant references on table "public"."legal_entities" to "service_role";

grant select on table "public"."legal_entities" to "service_role";

grant trigger on table "public"."legal_entities" to "service_role";

grant truncate on table "public"."legal_entities" to "service_role";

grant update on table "public"."legal_entities" to "service_role";

grant delete on table "public"."org_documents" to "anon";

grant insert on table "public"."org_documents" to "anon";

grant references on table "public"."org_documents" to "anon";

grant select on table "public"."org_documents" to "anon";

grant trigger on table "public"."org_documents" to "anon";

grant truncate on table "public"."org_documents" to "anon";

grant update on table "public"."org_documents" to "anon";

grant delete on table "public"."org_documents" to "authenticated";

grant insert on table "public"."org_documents" to "authenticated";

grant references on table "public"."org_documents" to "authenticated";

grant select on table "public"."org_documents" to "authenticated";

grant trigger on table "public"."org_documents" to "authenticated";

grant truncate on table "public"."org_documents" to "authenticated";

grant update on table "public"."org_documents" to "authenticated";

grant delete on table "public"."org_documents" to "service_role";

grant insert on table "public"."org_documents" to "service_role";

grant references on table "public"."org_documents" to "service_role";

grant select on table "public"."org_documents" to "service_role";

grant trigger on table "public"."org_documents" to "service_role";

grant truncate on table "public"."org_documents" to "service_role";

grant update on table "public"."org_documents" to "service_role";

grant delete on table "public"."organisations" to "anon";

grant insert on table "public"."organisations" to "anon";

grant references on table "public"."organisations" to "anon";

grant select on table "public"."organisations" to "anon";

grant trigger on table "public"."organisations" to "anon";

grant truncate on table "public"."organisations" to "anon";

grant update on table "public"."organisations" to "anon";

grant delete on table "public"."organisations" to "authenticated";

grant insert on table "public"."organisations" to "authenticated";

grant references on table "public"."organisations" to "authenticated";

grant select on table "public"."organisations" to "authenticated";

grant trigger on table "public"."organisations" to "authenticated";

grant truncate on table "public"."organisations" to "authenticated";

grant update on table "public"."organisations" to "authenticated";

grant delete on table "public"."organisations" to "service_role";

grant insert on table "public"."organisations" to "service_role";

grant references on table "public"."organisations" to "service_role";

grant select on table "public"."organisations" to "service_role";

grant trigger on table "public"."organisations" to "service_role";

grant truncate on table "public"."organisations" to "service_role";

grant update on table "public"."organisations" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

grant delete on table "public"."profiles_roles" to "anon";

grant insert on table "public"."profiles_roles" to "anon";

grant references on table "public"."profiles_roles" to "anon";

grant select on table "public"."profiles_roles" to "anon";

grant trigger on table "public"."profiles_roles" to "anon";

grant truncate on table "public"."profiles_roles" to "anon";

grant update on table "public"."profiles_roles" to "anon";

grant delete on table "public"."profiles_roles" to "authenticated";

grant insert on table "public"."profiles_roles" to "authenticated";

grant references on table "public"."profiles_roles" to "authenticated";

grant select on table "public"."profiles_roles" to "authenticated";

grant trigger on table "public"."profiles_roles" to "authenticated";

grant truncate on table "public"."profiles_roles" to "authenticated";

grant update on table "public"."profiles_roles" to "authenticated";

grant delete on table "public"."profiles_roles" to "service_role";

grant insert on table "public"."profiles_roles" to "service_role";

grant references on table "public"."profiles_roles" to "service_role";

grant select on table "public"."profiles_roles" to "service_role";

grant trigger on table "public"."profiles_roles" to "service_role";

grant truncate on table "public"."profiles_roles" to "service_role";

grant update on table "public"."profiles_roles" to "service_role";

grant delete on table "public"."roles" to "anon";

grant insert on table "public"."roles" to "anon";

grant references on table "public"."roles" to "anon";

grant select on table "public"."roles" to "anon";

grant trigger on table "public"."roles" to "anon";

grant truncate on table "public"."roles" to "anon";

grant update on table "public"."roles" to "anon";

grant delete on table "public"."roles" to "authenticated";

grant insert on table "public"."roles" to "authenticated";

grant references on table "public"."roles" to "authenticated";

grant select on table "public"."roles" to "authenticated";

grant trigger on table "public"."roles" to "authenticated";

grant truncate on table "public"."roles" to "authenticated";

grant update on table "public"."roles" to "authenticated";

grant delete on table "public"."roles" to "service_role";

grant insert on table "public"."roles" to "service_role";

grant references on table "public"."roles" to "service_role";

grant select on table "public"."roles" to "service_role";

grant trigger on table "public"."roles" to "service_role";

grant truncate on table "public"."roles" to "service_role";

grant update on table "public"."roles" to "service_role";

grant delete on table "public"."states" to "anon";

grant insert on table "public"."states" to "anon";

grant references on table "public"."states" to "anon";

grant select on table "public"."states" to "anon";

grant trigger on table "public"."states" to "anon";

grant truncate on table "public"."states" to "anon";

grant update on table "public"."states" to "anon";

grant delete on table "public"."states" to "authenticated";

grant insert on table "public"."states" to "authenticated";

grant references on table "public"."states" to "authenticated";

grant select on table "public"."states" to "authenticated";

grant trigger on table "public"."states" to "authenticated";

grant truncate on table "public"."states" to "authenticated";

grant update on table "public"."states" to "authenticated";

grant delete on table "public"."states" to "service_role";

grant insert on table "public"."states" to "service_role";

grant references on table "public"."states" to "service_role";

grant select on table "public"."states" to "service_role";

grant trigger on table "public"."states" to "service_role";

grant truncate on table "public"."states" to "service_role";

grant update on table "public"."states" to "service_role";

create policy "Enable all for authenticated users only"
on "public"."contracts"
as permissive
for all
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."countries"
as permissive
for select
to public
using (true);


create policy "Enable all for authenticated users only"
on "public"."dashboard_stats"
as permissive
for all
to authenticated
using (true);


create policy "Enable all for authenticated users only"
on "public"."legal_entities"
as permissive
for all
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."legal_entities"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."org_documents"
as permissive
for all
to authenticated
using (true);


create policy "Enable all for authenticated users only"
on "public"."organisations"
as permissive
for all
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."organisations"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable all access for authenticated users only"
on "public"."profiles"
as permissive
for all
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."profiles_roles"
as permissive
for all
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."states"
as permissive
for select
to public
using (true);


CREATE TRIGGER update_contract_status_trigger BEFORE UPDATE ON public.contracts FOR EACH ROW EXECUTE FUNCTION update_contract_status();

CREATE TRIGGER add_dashboard_stats_trigger AFTER INSERT ON public.organisations FOR EACH ROW EXECUTE FUNCTION add_dashboard_stats_function();


